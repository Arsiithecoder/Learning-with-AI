abstract class Employee {
    protected String name;
    protected int id;

    public Employee(String name, int id) {
        this.name = name;
        this.id = id;
    }

    public abstract double calculateSalary();

    public String getDetails() {
        return "ID: " + id + ", Name: " + name;
    }
}

class FullTimeEmployee extends Employee {
    private double monthlySalary;

    public FullTimeEmployee(String name, int id, double monthlySalary) {
        super(name, id);
        this.monthlySalary = monthlySalary;
    }

    public double calculateSalary() {
        return monthlySalary;
    }
}

class PartTimeEmployee extends Employee {
    private double hourlyRate;
    private int hoursWorked;

    public PartTimeEmployee(String name, int id, double hourlyRate, int hoursWorked) {
        super(name, id);
        this.hourlyRate = hourlyRate;
        this.hoursWorked = hoursWorked;
    }

    public double calculateSalary() {
        return hourlyRate * hoursWorked;
    }
}

class Intern extends Employee {
    private double stipend;

    public Intern(String name, int id, double stipend) {
        super(name, id);
        this.stipend = stipend;
    }

    public double calculateSalary() {
        return stipend;
    }
}

public class Main {
    public static void main(String[] args) {
        Employee fullTime = new FullTimeEmployee("Alice", 101, 5000.0);
        Employee partTime = new PartTimeEmployee("Bob", 102, 20.0, 80);
        Employee intern = new Intern("Charlie", 103, 1000.0);

        Employee[] employees = {fullTime, partTime, intern};

        for (Employee emp : employees) {
            System.out.println(emp.getDetails());
            System.out.println("Salary: $" + emp.calculateSalary());
            System.out.println("-------------------------");
        }
    }
}

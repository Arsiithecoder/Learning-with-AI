class Employee {
    protected String name;
    protected double baseSalary;

    public Employee(String name, double baseSalary) {
        this.name = name;
        this.baseSalary = baseSalary;
    }

    public double calculateSalary() {
        return baseSalary;
    }

    public void displayInfo() {
        System.out.println("Name: " + name);
        System.out.println("Base Salary: $" + baseSalary);
    }
}

class Manager extends Employee {
    private double bonus;

    public Manager(String name, double baseSalary, double bonus) {
        super(name, baseSalary);
        this.bonus = bonus;
    }

    @Override
    public double calculateSalary() {
        return baseSalary + bonus;
    }

    @Override
    public void displayInfo() {
        super.displayInfo();
        System.out.println("Bonus: $" + bonus);
        System.out.println("Total Salary: $" + calculateSalary());
    }
}

class Developer extends Employee {
    private double projectAllowance;

    public Developer(String name, double baseSalary, double projectAllowance) {
        super(name, baseSalary);
        this.projectAllowance = projectAllowance;
    }

    @Override
    public double calculateSalary() {
        return baseSalary + projectAllowance;
    }

    @Override
    public void displayInfo() {
        super.displayInfo();
        System.out.println("Project Allowance: $" + projectAllowance);
        System.out.println("Total Salary: $" + calculateSalary());
    }
}

public class EmployeeTest {
    public static void main(String[] args) {
        Employee emp = new Employee("Alice", 50000);
        Manager mgr = new Manager("Bob", 70000, 10000);
        Developer dev = new Developer("Charlie", 60000, 5000);

        System.out.println("Employee Details:");
        emp.displayInfo();
        System.out.println();

        System.out.println("Manager Details:");
        mgr.displayInfo();
        System.out.println();

        System.out.println("Developer Details:");
        dev.displayInfo();
    }
}

// Description: A simple student management system in Java that allows adding students, adding grades, and displaying student information.

import java.util.*;

class Student {
    private String name;
    private String id;
    private List<Integer> grades;

    public Student(String name, String id) {
        this.name = name;
        this.id = id;
        this.grades = new ArrayList<>();
    }

    public String getId() {
        return id;
    }

    public void addGrade(int grade) {
        grades.add(grade);
    }

    public double calculateAverage() {
        if (grades.isEmpty()) return 0.0;
        int sum = 0;
        for (int grade : grades) {
            sum += grade;
        }
        return (double) sum / grades.size();
    }

    public void displayStudentInfo() {
        System.out.println("Name: " + name);
        System.out.println("ID: " + id);
        System.out.println("Grades: " + grades);
        System.out.printf("Average: %.2f%n", calculateAverage());
    }
}

class StudentManagementSystem {
    private Map<String, Student> students;

    public StudentManagementSystem() {
        students = new HashMap<>();
    }

    public void addStudent(String name, String id) {
        if (students.containsKey(id)) {
            System.out.println("Student with this ID already exists.");
        } else {
            students.put(id, new Student(name, id));
            System.out.println("Student added successfully.");
        }
    }

    public void addGradeToStudent(String id, int grade) {
        Student student = students.get(id);
        if (student != null) {
            student.addGrade(grade);
            System.out.println("Grade added.");
        } else {
            System.out.println("Student not found.");
        }
    }

    public void displayAllStudents() {
        if (students.isEmpty()) {
            System.out.println("No students to display.");
        } else {
            for (Student student : students.values()) {
                student.displayStudentInfo();
                System.out.println("----------------------");
            }
        }
    }

    public void displayStudent(String id) {
        Student student = students.get(id);
        if (student != null) {
            student.displayStudentInfo();
        } else {
            System.out.println("Student not found.");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        StudentManagementSystem sms = new StudentManagementSystem();
        boolean exit = false;

        while (!exit) {
            System.out.println("\nStudent Management System:");
            System.out.println("1. Add new student");
            System.out.println("2. Add grade to student");
            System.out.println("3. Display all students");
            System.out.println("4. Display student information");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    System.out.print("Enter student name: ");
                    String name = scanner.nextLine();
                    System.out.print("Enter student ID: ");
                    String id = scanner.nextLine();
                    sms.addStudent(name, id);
                    break;
                case 2:
                    System.out.print("Enter student ID: ");
                    String studentId = scanner.nextLine();
                    System.out.print("Enter grade: ");
                    int grade = scanner.nextInt();
                    sms.addGradeToStudent(studentId, grade);
                    break;
                case 3:
                    sms.displayAllStudents();
                    break;
                case 4:
                    System.out.print("Enter student ID: ");
                    String searchId = scanner.nextLine();
                    sms.displayStudent(searchId);
                    break;
                case 5:
                    exit = true;
                    System.out.println("Exiting the system.");
                    break;
                default:
                    System.out.println("Invalid choice.");
            }
        }

        scanner.close();
    }
}

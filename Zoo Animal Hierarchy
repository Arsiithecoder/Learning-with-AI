abstract class Animal {
    protected String name;
    protected int age;

    public Animal(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public abstract void makeSound();
    public abstract void move();

    public String getDetails() {
        return "Name: " + name + ", Age: " + age;
    }
}

class Lion extends Animal {
    public Lion(String name, int age) {
        super(name, age);
    }

    public void makeSound() {
        System.out.println("Roar");
    }

    public void move() {
        System.out.println("Stalks through the grass");
    }
}

class Elephant extends Animal {
    public Elephant(String name, int age) {
        super(name, age);
    }

    public void makeSound() {
        System.out.println("Trumpet");
    }

    public void move() {
        System.out.println("Walks slowly");
    }
}

class Bird extends Animal {
    public Bird(String name, int age) {
        super(name, age);
    }

    public void makeSound() {
        System.out.println("Chirp");
    }

    public void move() {
        System.out.println("Flies in the sky");
    }
}

public class Main {
    public static void main(String[] args) {
        Animal lion = new Lion("Leo", 5);
        Animal elephant = new Elephant("Dumbo", 10);
        Animal bird = new Bird("Tweety", 2);

        Animal[] animals = {lion, elephant, bird};

        for (Animal animal : animals) {
            System.out.println(animal.getDetails());
            animal.makeSound();
            animal.move();
            System.out.println("-------------------------");
        }
    }
}
